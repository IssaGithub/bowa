---
// Demo Video Hero Slider Component for BOWAVE with CSS backgrounds
const heroSlides = [
  {
    background: 'linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 50%, #1a1a1a 100%)',
    title: 'BOWAVE Summer Collection',
    subtitle: 'Neue Streetwear für den Sommer 2025',
    cta: 'Jetzt entdecken',
    overlay: 'bg-red-900 bg-opacity-20'
  },
  {
    background: 'linear-gradient(135deg, #0f0f0f 0%, #1a1a1a 50%, #2d2d2d 100%)',
    title: 'Limited Edition Drop',
    subtitle: 'Exklusive Pieces für echte Streetwear-Fans',
    cta: 'Shop Collection',
    overlay: 'bg-gray-900 bg-opacity-30'
  },
  {
    background: 'linear-gradient(135deg, #2d2d2d 0%, #1a1a1a 50%, #0f0f0f 100%)',
    title: 'BOWAVE Skateboard Series',
    subtitle: 'Von der Street für die Street',
    cta: 'Alle Decks ansehen',
    overlay: 'bg-red-800 bg-opacity-15'
  }
];
---

<section class="relative h-screen overflow-hidden bg-black">
  <!-- Demo Video Slider Container -->
  <div id="heroSlider" class="relative w-full h-full">
    {heroSlides.map((slide, index) => (
      <div 
        class={`hero-slide absolute inset-0 transition-all duration-1000 ${index === 0 ? 'opacity-100 scale-100' : 'opacity-0 scale-105'}`}
        data-slide={index}
        style={`background: ${slide.background};`}
      >
        <!-- Animated Background Pattern -->
        <div class="absolute inset-0 opacity-10">
          <div class="absolute inset-0 bg-[url('data:image/svg+xml,%3Csvg width="60" height="60" viewBox="0 0 60 60" xmlns="http://www.w3.org/2000/svg"%3E%3Cg fill="none" fill-rule="evenodd"%3E%3Cg fill="%23ffffff" fill-opacity="0.1"%3E%3Ccircle cx="30" cy="30" r="2"/%3E%3C/g%3E%3C/g%3E%3C/svg%3E')] animate-pulse"></div>
        </div>
        
        <!-- Slide Overlay -->
        <div class={`absolute inset-0 ${slide.overlay}`}></div>
        
        <!-- Animated Shapes -->
        <div class="absolute inset-0 overflow-hidden">
          <div class="absolute top-20 left-10 w-20 h-20 border border-red-600 opacity-30 rotate-45 animate-spin-slow"></div>
          <div class="absolute bottom-20 right-10 w-16 h-16 bg-red-600 opacity-20 rounded-full animate-bounce-slow"></div>
          <div class="absolute top-1/2 left-20 w-1 h-32 bg-white opacity-20 transform -rotate-12"></div>
          <div class="absolute top-1/3 right-32 w-12 h-12 border-2 border-white opacity-10 rounded-full"></div>
        </div>
        
        <!-- Content Overlay -->
        <div class="absolute inset-0 flex items-center justify-center z-10">
          <div class="text-center text-white px-4 max-w-5xl mx-auto">
            <!-- BOWAVE Logo with Animation -->
            <div class="bg-red-600 px-8 py-4 mb-8 mx-auto w-fit transform hover:scale-105 transition-transform duration-300">
              <h1 class="text-white font-bold text-4xl md:text-6xl tracking-wider animate-fade-in">BOWAVE</h1>
            </div>
            
            <!-- Slide Title with Animation -->
            <h2 class="text-3xl md:text-5xl font-bold mb-4 leading-tight animate-slide-up">
              {slide.title}
            </h2>
            
            <!-- Slide Subtitle with Animation -->
            <p class="text-xl md:text-2xl mb-8 text-gray-200 animate-slide-up-delay">
              {slide.subtitle}
            </p>
            
            <!-- CTA Button with Animation -->
            <button 
              class="bg-red-600 hover:bg-red-700 text-white font-bold py-4 px-8 text-lg transition-all duration-300 border border-red-600 hover:border-red-700 hover:scale-105 animate-slide-up-delay-2"
              onclick="window.location.href='/shop'"
            >
              {slide.cta}
            </button>
          </div>
        </div>
      </div>
    ))}
  </div>
  
  <!-- Navigation Dots -->
  <div class="absolute bottom-8 left-1/2 transform -translate-x-1/2 flex space-x-3 z-20">
    {heroSlides.map((_, index) => (
      <button
        class={`w-3 h-3 rounded-full transition-all duration-300 ${index === 0 ? 'bg-red-600' : 'bg-white bg-opacity-50'} hover:bg-red-500 hover:scale-125`}
        data-slide-to={index}
        aria-label={`Go to slide ${index + 1}`}
      ></button>
    ))}
  </div>
  
  <!-- Navigation Arrows -->
  <button 
    id="prevSlide"
    class="absolute left-4 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-50 text-white p-3 rounded-full hover:bg-opacity-70 transition-all duration-300 z-20 hover:scale-110"
    aria-label="Previous slide"
  >
    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>
    </svg>
  </button>
  
  <button 
    id="nextSlide"
    class="absolute right-4 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-50 text-white p-3 rounded-full hover:bg-opacity-70 transition-all duration-300 z-20 hover:scale-110"
    aria-label="Next slide"
  >
    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
    </svg>
  </button>
  
  <!-- Progress Bar -->
  <div class="absolute bottom-0 left-0 right-0 h-1 bg-black bg-opacity-30 z-20">
    <div id="progressBar" class="h-full bg-red-600 transition-all duration-100" style="width: 0%"></div>
  </div>
  
  <!-- Scroll Indicator -->
  <div class="absolute bottom-16 left-1/2 transform -translate-x-1/2 z-20 text-white opacity-70 animate-bounce">
    <div class="flex flex-col items-center">
      <span class="text-sm mb-2">Scroll down</span>
      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3"/>
      </svg>
    </div>
  </div>
</section>

<script>
  // Hero Slider Functionality
  let currentSlide = 0;
  const slides = document.querySelectorAll('.hero-slide');
  const dots = document.querySelectorAll('[data-slide-to]');
  const totalSlides = slides.length;
  let slideInterval: NodeJS.Timeout;
  let progressInterval: NodeJS.Timeout;
  let progress = 0;
  
  const SLIDE_DURATION = 5000; // 5 seconds per slide
  
  // Initialize slider
  function initSlider() {
    startProgressBar();
    slideInterval = setInterval(() => {
      nextSlide();
    }, SLIDE_DURATION);
  }
  
  // Start progress bar
  function startProgressBar() {
    progress = 0;
    const progressBar = document.getElementById('progressBar');
    
    progressInterval = setInterval(() => {
      progress += 100 / (SLIDE_DURATION / 50); // Update every 50ms
      if (progressBar) {
        progressBar.style.width = `${Math.min(progress, 100)}%`;
      }
      
      if (progress >= 100) {
        clearInterval(progressInterval);
      }
    }, 50);
  }
  
  // Reset progress bar
  function resetProgressBar() {
    clearInterval(progressInterval);
    progress = 0;
    const progressBar = document.getElementById('progressBar');
    if (progressBar) {
      progressBar.style.width = '0%';
    }
  }
  
  // Show specific slide
  function showSlide(index: number) {
    // Hide all slides
    slides.forEach((slide, i) => {
      slide.classList.toggle('opacity-100', i === index);
      slide.classList.toggle('opacity-0', i !== index);
      slide.classList.toggle('scale-100', i === index);
      slide.classList.toggle('scale-105', i !== index);
    });
    
    // Update dots
    dots.forEach((dot, i) => {
      dot.classList.toggle('bg-red-600', i === index);
      dot.classList.toggle('bg-white', i !== index);
      dot.classList.toggle('bg-opacity-50', i !== index);
    });
    
    currentSlide = index;
    
    // Reset and restart progress bar
    resetProgressBar();
    setTimeout(() => startProgressBar(), 100);
  }
  
  // Next slide
  function nextSlide() {
    const next = (currentSlide + 1) % totalSlides;
    showSlide(next);
  }
  
  // Previous slide
  function prevSlide() {
    const prev = (currentSlide - 1 + totalSlides) % totalSlides;
    showSlide(prev);
  }
  
  // Reset timer
  function resetTimer() {
    clearInterval(slideInterval);
    clearInterval(progressInterval);
    initSlider();
  }
  
  // Event listeners
  document.addEventListener('DOMContentLoaded', () => {
    // Navigation arrows
    document.getElementById('nextSlide')?.addEventListener('click', () => {
      nextSlide();
      resetTimer();
    });
    
    document.getElementById('prevSlide')?.addEventListener('click', () => {
      prevSlide();
      resetTimer();
    });
    
    // Dots navigation
    dots.forEach((dot, index) => {
      dot.addEventListener('click', () => {
        showSlide(index);
        resetTimer();
      });
    });
    
    // Keyboard navigation
    document.addEventListener('keydown', (e) => {
      if (e.key === 'ArrowLeft') {
        prevSlide();
        resetTimer();
      } else if (e.key === 'ArrowRight') {
        nextSlide();
        resetTimer();
      }
    });
    
    // Pause on hover
    const slider = document.getElementById('heroSlider');
    slider?.addEventListener('mouseenter', () => {
      clearInterval(slideInterval);
      clearInterval(progressInterval);
    });
    
    slider?.addEventListener('mouseleave', () => {
      resetTimer();
    });
    
    // Initialize
    initSlider();
  });
</script>

<style>
  /* Custom animations */
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
  }
  
  @keyframes slideUp {
    from { opacity: 0; transform: translateY(40px); }
    to { opacity: 1; transform: translateY(0); }
  }
  
  @keyframes spinSlow {
    from { transform: rotate(45deg); }
    to { transform: rotate(405deg); }
  }
  
  @keyframes bounceSlow {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-20px); }
  }
  
  .animate-fade-in {
    animation: fadeIn 1s ease-out 0.2s both;
  }
  
  .animate-slide-up {
    animation: slideUp 1s ease-out 0.4s both;
  }
  
  .animate-slide-up-delay {
    animation: slideUp 1s ease-out 0.6s both;
  }
  
  .animate-slide-up-delay-2 {
    animation: slideUp 1s ease-out 0.8s both;
  }
  
  .animate-spin-slow {
    animation: spinSlow 20s linear infinite;
  }
  
  .animate-bounce-slow {
    animation: bounceSlow 3s ease-in-out infinite;
  }
  
  /* Hero slide transitions */
  .hero-slide {
    transition: all 1s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .hero-slide h2 {
      font-size: 2rem;
    }
    
    .hero-slide p {
      font-size: 1.25rem;
    }
    
    .hero-slide button {
      font-size: 1rem;
      padding: 0.75rem 1.5rem;
    }
    
    /* Hide decorative elements on mobile */
    .hero-slide > div:nth-child(3) {
      display: none;
    }
  }
</style> 